<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="391" started-at="2014-01-15T14:08:33Z" finished-at="2014-01-15T14:08:33Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="391" started-at="2014-01-15T14:08:33Z" finished-at="2014-01-15T14:08:33Z">
      <class name="com.payulatam.samples.bank.test.ClientDaoTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeSuite" is-config="true" duration-ms="6" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeTest" is-config="true" duration-ms="1" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="303" started-at="2014-01-15T09:08:33Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeClass" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateEmptyName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeMethod" is-config="true" duration-ms="58" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createValidateEmptyName()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="createValidateEmptyName" duration-ms="8" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid fields: [name]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid fields: [name]
	at com.payulatam.samples.bank.service.ClientDAO.create(ClientDAO.java:40)
	at com.payulatam.samples.bank.test.ClientDaoTest.createValidateEmptyName(ClientDaoTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateEmptyName -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateEmptyName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="createValidateEmptyPhoneNumber()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="createValidateEmptyPhoneNumber" duration-ms="1" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid fields: [telephone]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid fields: [telephone]
	at com.payulatam.samples.bank.service.ClientDAO.create(ClientDAO.java:40)
	at com.payulatam.samples.bank.test.ClientDaoTest.createValidateEmptyPhoneNumber(ClientDaoTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateEmptyPhoneNumber -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateEmptyPhoneNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateEmptyPhoneNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="createValidateInvalidPhoneNumber()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="createValidateInvalidPhoneNumber" duration-ms="1" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid fields: [telephone]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid fields: [telephone]
	at com.payulatam.samples.bank.service.ClientDAO.create(ClientDAO.java:40)
	at com.payulatam.samples.bank.test.ClientDaoTest.createValidateInvalidPhoneNumber(ClientDaoTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateInvalidPhoneNumber -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateInvalidPhoneNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateInvalidPhoneNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateNameWithOutSpaces()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createValidateNameWithOutSpaces()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="createValidateNameWithOutSpaces" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateNameWithOutSpaces -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateNameWithOutSpaces()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createValidateNameWithSpaces()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="createValidateNameWithSpaces" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateNameWithSpaces -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateNameWithSpaces()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidateNameWithSpaces()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidatePhoneNumberWithSpaces()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createValidatePhoneNumberWithSpaces()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="createValidatePhoneNumberWithSpaces" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Invalid fields: [telephone]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Invalid fields: [telephone]
	at com.payulatam.samples.bank.service.ClientDAO.create(ClientDAO.java:40)
	at com.payulatam.samples.bank.test.ClientDaoTest.createValidatePhoneNumberWithSpaces(ClientDaoTest.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidatePhoneNumberWithSpaces -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.ClientDaoTest.createValidatePhoneNumberWithSpaces()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.payulatam.samples.bank.test.ClientDaoTest@3abdd3e7]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2014-01-15T09:08:33Z" finished-at="2014-01-15T09:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.payulatam.samples.bank.test.ClientDaoTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
