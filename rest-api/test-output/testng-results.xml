<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="30" passed="29">
  <reporter-output>
  </reporter-output>
  <suite name="Services" duration-ms="519" started-at="2014-01-15T23:07:16Z" finished-at="2014-01-15T23:07:16Z">
    <groups>
    </groups>
    <test name="AccountDao" duration-ms="437" started-at="2014-01-15T23:07:16Z" finished-at="2014-01-15T23:07:16Z">
      <class name="com.payulatam.samples.bank.test.service.AccountDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="5" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="342" started-at="2014-01-15T18:07:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeClass" is-config="true" duration-ms="54" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createAccountInvalidClientId()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="createAccountInvalidClientId" duration-ms="8" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.AccountDao.create(AccountDao.java:35)
	at com.payulatam.samples.bank.test.service.AccountDaoTest.createAccountInvalidClientId(AccountDaoTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountInvalidClientId -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.createAccountInvalidClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.createAccountInvalidClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.createValidAccount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createValidAccount()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="createValidAccount" duration-ms="3" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidAccount -->
        <test-method status="PASS" signature="deleteAccountInvalidId()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="deleteAccountInvalidId" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.AccountDao.delete(AccountDao.java:49)
	at com.payulatam.samples.bank.test.service.AccountDaoTest.deleteAccountInvalidId(AccountDaoTest.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteAccountInvalidId -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.deleteAccountInvalidId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.createValidAccount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.deleteAccountInvalidId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="deleteValidAccount()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="deleteValidAccount" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteValidAccount -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.deleteValidAccount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="searchAcountById()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="searchAcountById" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAcountById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.deleteValidAccount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountByNonExistentId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="searchAcountByNonExistentId()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="searchAcountByNonExistentId" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.AccountDao.searchById(AccountDao.java:57)
	at com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountByNonExistentId(AccountDaoTest.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAcountByNonExistentId -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountByNonExistentId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="searchAcountsByClientId()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="searchAcountsByClientId" duration-ms="3" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAcountsByClientId -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountsByClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountsByClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="searchAcountsByNonExistentClientId()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="searchAcountsByNonExistentClientId" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.AccountDao.searchAccountsByClientId(AccountDao.java:65)
	at com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountsByNonExistentClientId(AccountDaoTest.java:157)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchAcountsByNonExistentClientId -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountsByNonExistentClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.AccountDaoTest.searchAcountsByNonExistentClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.payulatam.samples.bank.test.service.AccountDaoTest@2e484dfd]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.payulatam.samples.bank.test.service.AccountDaoTest -->
    </test> <!-- AccountDao -->
    <test name="ClientDao" duration-ms="13" started-at="2014-01-15T23:07:16Z" finished-at="2014-01-15T23:07:16Z">
      <class name="com.payulatam.samples.bank.test.service.ClientDaoTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2014-01-15T18:07:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="beforeClass" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createValidClient()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="createValidClient" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidClient -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.createValidClient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="deleteNonExistentClient()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="deleteNonExistentClient" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.ClientDao.delete(ClientDao.java:61)
	at com.payulatam.samples.bank.test.service.ClientDaoTest.deleteNonExistentClient(ClientDaoTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteNonExistentClient -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.createValidClient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.deleteNonExistentClient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.searchById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.deleteNonExistentClient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="searchById()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="searchById" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchById -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.searchById()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.searchByNonExistentId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="searchByNonExistentId()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="searchByNonExistentId" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.ClientDao.searchById(ClientDao.java:69)
	at com.payulatam.samples.bank.test.service.ClientDaoTest.searchByNonExistentId(ClientDaoTest.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByNonExistentId -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.searchByNonExistentId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.updateNonExistingClient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="updateNonExistingClient()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="updateNonExistingClient" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.ClientDao.update(ClientDao.java:42)
	at com.payulatam.samples.bank.test.service.ClientDaoTest.updateNonExistingClient(ClientDaoTest.java:72)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateNonExistingClient -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.ClientDaoTest@4ef888ea]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.ClientDaoTest.updateNonExistingClient()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.payulatam.samples.bank.test.service.ClientDaoTest -->
    </test> <!-- ClientDao -->
    <test name="TransactionDao" duration-ms="27" started-at="2014-01-15T23:07:16Z" finished-at="2014-01-15T23:07:16Z">
      <class name="com.payulatam.samples.bank.test.service.TransactionDaoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="8" started-at="2014-01-15T18:07:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createCreditTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeClass" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createCreditTransaction()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="createCreditTransaction" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createCreditTransaction -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createDebitTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createCreditTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="createDebitTransaction()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="createDebitTransaction" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDebitTransaction -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createDebitTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidCreditTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="createInvalidCreditTransaction()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="createInvalidCreditTransaction" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
	at com.payulatam.samples.bank.service.TransactionDao.create(TransactionDao.java:56)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidCreditTransaction(TransactionDaoTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvalidCreditTransaction -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidNegativeValueTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidCreditTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="createInvalidNegativeValueTransaction()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="createInvalidNegativeValueTransaction" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[[Transaction value should be >= 0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: [Transaction value should be >= 0]
	at com.payulatam.samples.bank.service.TransactionDao.create(TransactionDao.java:48)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidNegativeValueTransaction(TransactionDaoTest.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvalidNegativeValueTransaction -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidNegativeValueTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="createInvalidNullTypeTransaction()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="createInvalidNullTypeTransaction" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[[Transaction type can not be null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: [Transaction type can not be null]
	at com.payulatam.samples.bank.service.TransactionDao.create(TransactionDao.java:48)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidNullTypeTransaction(TransactionDaoTest.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createInvalidNullTypeTransaction -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidNullTypeTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByAccountId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.createInvalidNullTypeTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="searchByAccountId()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="searchByAccountId" duration-ms="2" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByAccountId -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByAccountId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="searchByClientId()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="searchByClientId" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.TransactionDao.searchByClientId(TransactionDao.java:97)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByClientId(TransactionDaoTest.java:203)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByClientId -->
        <test-method status="PASS" signature="searchByNonExistentAccountId()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="searchByNonExistentAccountId" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.TransactionDao.searchByAccountId(TransactionDao.java:88)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentAccountId(TransactionDaoTest.java:187)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByNonExistentAccountId -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentAccountId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByClientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentAccountId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="searchByNonExistentCientId()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="searchByNonExistentCientId" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.TransactionDao.searchByClientId(TransactionDao.java:97)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentCientId(TransactionDaoTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByNonExistentCientId -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentCientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentCientId()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="searchByNonExistentNumber()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="searchByNonExistentNumber" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
	at com.payulatam.samples.bank.service.TransactionDao.searchByNumber(TransactionDao.java:80)
	at com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNonExistentNumber(TransactionDaoTest.java:156)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.GeneratedMethodAccessor3.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByNonExistentNumber -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="searchByNumber()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="searchByNumber" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchByNumber -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.payulatam.samples.bank.test.service.TransactionDaoTest@1d582a88]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.payulatam.samples.bank.test.service.TransactionDaoTest.searchByNumber()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- com.payulatam.samples.bank.test.service.TransactionDaoTest -->
    </test> <!-- TransactionDao -->
    <test name="Utils" duration-ms="6" started-at="2014-01-15T23:07:16Z" finished-at="2014-01-15T23:07:16Z">
      <class name="com.payulatam.samples.bank.test.service.UtilsTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="setup" is-config="true" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="createValidateEmptyName()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="createValidateEmptyName" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateEmptyName -->
        <test-method status="PASS" signature="createValidateNameWithSpaces()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="createValidateNameWithSpaces" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateNameWithSpaces -->
        <test-method status="PASS" signature="createValidateNameWithOutSpaces()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="createValidateNameWithOutSpaces" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createValidateNameWithOutSpaces -->
        <test-method status="PASS" signature="validateEmptyPhoneNumber()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="validateEmptyPhoneNumber" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmptyPhoneNumber -->
        <test-method status="PASS" signature="validateInvalidPhoneNumber()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="validateInvalidPhoneNumber" duration-ms="1" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateInvalidPhoneNumber -->
        <test-method status="PASS" signature="validatePhoneNumberWithSpaces()[pri:0, instance:com.payulatam.samples.bank.test.service.UtilsTest@669b9a30]" name="validatePhoneNumberWithSpaces" duration-ms="0" started-at="2014-01-15T18:07:16Z" finished-at="2014-01-15T18:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePhoneNumberWithSpaces -->
      </class> <!-- com.payulatam.samples.bank.test.service.UtilsTest -->
    </test> <!-- Utils -->
  </suite> <!-- Services -->
</testng-results>
